name: Build and Release Desktop App

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run electron:build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run electron:build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run electron:build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: dist-electron/*.exe
      
      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: dist-electron/*.dmg
      
      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            dist-electron/*.AppImage
            dist-electron/*.deb

  publish:
    needs: release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: ./artifacts/windows
      
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-installer
          path: ./artifacts/macos
      
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-installer
          path: ./artifacts/linux
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows/*.exe
            artifacts/macos/*.dmg
            artifacts/linux/*.AppImage
            artifacts/linux/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            # K8s Platform Manager Desktop App 🚀
            
            ## دانلود برای سیستم‌عامل خود:
            
            ### 🪟 Windows
            - فایل `.exe` را دانلود کنید
            - اجرا کنید و مراحل نصب را طی کنید
            - از منوی Start اجرا کنید یا از دسکتاپ
            
            ### 🍎 macOS
            - فایل `.dmg` را دانلود کنید
            - باز کنید و به Applications بکشید
            - اجرا کنید
            
            ### 🐧 Linux
            - **AppImage**: دانلود → اجازه اجرا → دوبار کلیک
              ```bash
              chmod +x K8s-Platform-Manager-*.AppImage
              ./K8s-Platform-Manager-*.AppImage
              ```
            - **DEB**: برای Ubuntu/Debian
              ```bash
              sudo dpkg -i k8s-platform-manager_*.deb
              ```
            
            ## ویژگی‌ها:
            ✅ اتصال به API مدیریت Kubernetes  
            ✅ مشاهده و مدیریت کلاسترها  
            ✅ دیپلوی اپلیکیشن‌ها با یک کلیک  
            ✅ نمایش خودکار username و password سرویس‌ها  
            ✅ کنترل سرویس‌ها (Restart, Stop, Start, Delete)  
            ✅ کپی کردن اطلاعات با یک کلیک  
            ✅ باز کردن سرویس‌ها در مرورگر  
            ✅ System Tray برای دسترسی سریع  
            
            ## مستندات:
            - [راهنمای نصب و استفاده](https://github.com/YOUR_USERNAME/k8s-platform-panel/blob/main/DESKTOP-APP.md)
            - [گزینه‌های مختلف اجرا](https://github.com/YOUR_USERNAME/k8s-platform-panel/blob/main/HOW-TO-RUN.md)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
